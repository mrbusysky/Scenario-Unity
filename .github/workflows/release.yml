name: Release

on:
  push:
    branches:
      - development  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get last release tag
      id: last_release
      run: echo "::set-output name=tag_name::$(git describe --tags --abbrev=0)"

    - name: Increment version
      id: increment_version
      run: |
        version=${{ steps.last_release.outputs.tag_name }}
        IFS='.' read -ra parts <<< "$version"
        major=${parts[0]}
        minor=${parts[1]}
        patch=${parts[2]}
        patch=$((patch + 1))
        new_version="$major.$minor.$patch"
        echo "::set-output name=version::$new_version"

    - name: Zip 2D version
      if: steps.increment_version.outputs.version != ''
      run: |
        version=${{ steps.increment_version.outputs.version }}
        zip -r Scenario2D-v$version.zip Scenario README.md Scenario2DPackageInstaller.cs Scenario2D.wlt ScenarioPackageInstaller2.cs

    - name: Zip 3D version
      if: steps.increment_version.outputs.version != ''
      run: |
        version=${{ steps.increment_version.outputs.version }}
        zip -r Scenario3D-v$version.zip Scenario README.md Scenario3DPackageInstaller.cs Scenario3D.wlt ScenarioPackageInstaller2.cs

    - name: Create Release
      id: create_release
      if: steps.increment_version.outputs.version != ''
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.NOT_GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.increment_version.outputs.version }}
        release_name: Release ${{ steps.increment_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload 2D Asset
      if: steps.increment_version.outputs.version != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.NOT_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Scenario2D-v${{ steps.increment_version.outputs.version }}.zip
        asset_name: Scenario2D-v${{ steps.increment_version.outputs.version }}.zip
        asset_content_type: application/zip

    - name: Upload 3D Asset 
      if: steps.increment_version.outputs.version != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.NOT_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Scenario3D-v${{ steps.increment_version.outputs.version }}.zip
        asset_name: Scenario3D-v${{ steps.increment_version.outputs.version }}.zip
        asset_content_type: application/zip
