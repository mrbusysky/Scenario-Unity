name: Release

on:
  push:
    branches:
      - main  

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Get latest release
      id: get_release
      uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/releases/latest

    - name: Set initial version
      if: steps.get_release.outputs.data == ''
      run: |
        echo "VERSION=0.1.2" >> $GITHUB_ENV

    - name: Get version
      id: get_version
      run: |
        version=${VERSION:-${{ env.VERSION }}}
        echo ::set-output name=version::${version} 

    - name: Check minor version
      id: check
      run: |
        if [[ $(echo "${{ steps.get_version.outputs.version }}" | awk -F. '{print $2}') == 0 ]]; then
          echo ::set-output name=minor_change::false
        else
          echo ::set-output name=minor_change::true
        fi

    - name: Zip Scenario folder
      if: steps.check.outputs.minor_change == 'true'
      run: |
        zip -r scenario.zip Scenario
        
    - name: Zip 2D version
      if: steps.check.outputs.minor_change == 'true'  
      run: |
        zip Scenario-v${{steps.get_version.outputs.version}}.zip 2D README.md Scenario2DPackageInstaller.cs Scenario2D.wlt scenario.zip

    - name: Zip 3D version
      if: steps.check.outputs.minor_change == 'true'
      run: |
        zip Scenario-v${{steps.get_version.outputs.version}}.zip 3D README.md Scenario3DPackageInstaller.cs Scenario3D.wlt scenario.zip
    
    - name: Create Release
      if: steps.check.outputs.minor_change == 'true'
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload 2D Asset
      if: steps.check.outputs.minor_change == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Scenario-v${{steps.get_version.outputs.version}}.zip
        asset_name: Scenario2D-v${{steps.get_version.outputs.version}}.zip
        asset_content_type: application/zip

    - name: Upload 3D Asset 
      if: steps.check.outputs.minor_change == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.NOT_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Scenario-v${{steps.get_version.outputs.version}}.zip
        asset_name: Scenario3D-v${{steps.get_version.outputs.version}}.zip
        asset_content_type: application/zip
